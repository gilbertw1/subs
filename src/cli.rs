use clap::{Arg, App};

pub fn create_cli_app() -> App<'static,'static> {
    App::new("subs")
        .version("0.1.0")
        .author("Bryan G. <bryan@bryan.sh>")
        .about("A utility that can be used to substitute variables in templates.")
        .arg(Arg::with_name("file")
             .value_name("IN-FILE")
             .help("Template file to be used. Use '-' for stdin.")
             .index(1))
        .arg(Arg::with_name("output-file")
             .value_name("OUT-FILE")
             .help("File to write resulting template substitution out to. Use '-' for stdout.")
             .index(2))
        .arg(Arg::with_name("mappings")
             .value_name("MAPPINGS")
             .long("mappings")
             .help("Replacement mappings definitions")
             .env("SUBS_MAPPINGS")
             .takes_value(true))
        .arg(Arg::with_name("mappings-file")
             .value_name("FILE")
             .long("mappings-file")
             .help("File containing replacement mappings definitions. Overrides mappings argument. Use '-' for stdin.")
             .takes_value(true))
        .arg(Arg::with_name("start-delim")
             .value_name("DELIMITER")
             .long("start-delimiter")
             .help("Delimiter used to delineate the start of a substitution.")
             .short("s")
             .default_value("{{")
             .takes_value(true))
        .arg(Arg::with_name("end-delim")
             .value_name("DELIMITER")
             .long("end-delimiter")
             .help("Delimiter used to delineate the end of a substitution.")
             .short("e")
             .default_value("}}")
             .takes_value(true))
}
